{"version":3,"sources":["store/actions/actions.js","hoc/Auxiliary/Auxiliary.js","container/Task-Table/TaskTable.js","components/LiveTimerLayout/LiveTimerLayout.js","container/Live-Timer/LiveTimer.js","container/Main/Main.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["timer","closeNofication","id","type","notificationId","aux","props","children","TaskTable","state","tasks","name","duration","editId","show","nameAddHandler","event","setState","target","value","durationAddHandler","taskChangeHandler","handleClose","handleConfirm","editTaskHandler","className","this","map","task","index","key","Button","vibrant","onClick","deleteTaskHandler","placeholder","onChange","min","addTaskHandler","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","Component","connect","dispatch","setTimeout","newTask","actionCreators","taskId","liveTimerLayout","colors","sum","updatedTask","sort","a","b","undefined","style","height","background","display","justifyContent","alignItems","position","border","top","ctr","right","width","textAlign","LiveTimer","counterState","filter","alertTime","valid","forEach","notificationHandler","Date","Math","floor","console","log","notifications","alert","Toast","onClose","closeNotificationHandler","disabled","play","playTimerHandler","pause","pauseTimerHandler","resetTimerHandler","LiveTimerLayout","aria-live","aria-atomic","minHeight","left","counter","cnt","clearInterval","setInterval","Main","App","path","exact","component","Boolean","window","location","hostname","match","initialState","reducer","action","concat","updatedTasks","updatedNotification","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","result","getState","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.27dd8623.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    taskId: id,\r\n  };\r\n};\r\n\r\nexport const editTask = (id, name, duration) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    name: name,\r\n    duration: duration,\r\n    taskId: id,\r\n  };\r\n};\r\n\r\nexport const newTask = (name, duration) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    name: name,\r\n    duration: duration,\r\n  };\r\n};\r\n\r\nexport const addTask = (name, duration) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(newTask(name, duration));\r\n    }, 0);\r\n  };\r\n};\r\n\r\nexport const PLAY_TIMER = \"PLAY_TIMER\";\r\nexport const PAUSE_TIMER = \"PAUSE_TIMER\";\r\nexport const RESET_TIMER = \"RESET_TIMER\";\r\nexport const PUSH_NOTIFICATION = \"PUSH_NOTIFICATION\";\r\nexport const CLOSE_NOTIFICATION = \"CLOSE_NOTIFICATION\";\r\n\r\nlet timer = null;\r\nexport const playTimer = () => {\r\n  return (dispatch) => {\r\n    let cnt = 0;\r\n    clearInterval(timer);\r\n    timer = setInterval(() => {\r\n      dispatch({ type: PLAY_TIMER });\r\n      cnt++;\r\n      if (cnt === 61) {\r\n        clearInterval(timer);\r\n        dispatch({ type: RESET_TIMER });\r\n      }\r\n    }, 1000);\r\n  };\r\n};\r\n\r\nexport const pauseTimer = () => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      dispatch({ type: PAUSE_TIMER });\r\n    }, 0);\r\n  };\r\n};\r\nexport const resetTimer = () => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      dispatch({ type: RESET_TIMER });\r\n    }, 0);\r\n  };\r\n};\r\n\r\nexport const closeNofication = (id) => {\r\n  return {\r\n    type: CLOSE_NOTIFICATION,\r\n    notificationId: id,\r\n  };\r\n};\r\n\r\nexport const pushNofication = (id, name, duration) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PUSH_NOTIFICATION,\r\n      id: id,\r\n      name: name,\r\n      duration: duration,\r\n    });\r\n    setTimeout(() => {\r\n      dispatch(closeNofication(id));\r\n    }, 10000);\r\n  };\r\n};\r\n","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport * as actionCreators from \"../../store/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\n\r\nclass TaskTable extends Component {\r\n  state = {\r\n    tasks: {\r\n      name: \"\",\r\n      duration: \"\",\r\n    },\r\n    editId: \"\",\r\n    show: false,\r\n  };\r\n  nameAddHandler = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  durationAddHandler = (event) => {\r\n    this.setState({ duration: event.target.value });\r\n  };\r\n  taskChangeHandler = (id, name) => {\r\n    this.setState({ show: true, editId: id });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  handleConfirm = () => {\r\n    this.setState({ show: false });\r\n    this.props.editTaskHandler(\r\n      this.state.editId,\r\n      this.state.name,\r\n      this.state.duration\r\n    );\r\n  };\r\n  render() {\r\n    let tasks = <p className=\"text-center\">Please add task</p>;\r\n    if (this.props.tasks) {\r\n      tasks = this.props.tasks.map((task, index) => {\r\n        return (\r\n          <tbody key={task.id + index}>\r\n            <tr className=\"text-success\">\r\n              <td>{task.name}</td>\r\n              <td>{task.duration} second</td>\r\n              <td>\r\n                <Button\r\n                  vibrant=\"outline-primary\"\r\n                  onClick={() => this.taskChangeHandler(task.id)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <button\r\n                  className=\"btn btn-outline-primary ml-2\"\r\n                  onClick={() => this.props.deleteTaskHandler(task.id + index)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <div className=\"float-left\">\r\n          <h4>Task Table</h4>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          onChange={this.nameAddHandler}\r\n          value={this.state.name}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          placeholder=\"Duration\"\r\n          onChange={this.durationAddHandler}\r\n          value={this.state.duration}\r\n        />\r\n        <div className=\"float-right\">\r\n          <button\r\n            className=\"btn btn-secondary mb-3\"\r\n            onClick={() =>\r\n              this.props.addTaskHandler(this.state.name, this.state.duration)\r\n            }\r\n          >\r\n            Add Task\r\n          </button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-hover table-bordered table-md\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>Task Name</th>\r\n                <th>Task Duration</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {tasks}\r\n          </table>\r\n          <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Modal heading</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                onChange={this.nameAddHandler}\r\n                value={this.state.name}\r\n              />\r\n              <input\r\n                min=\"1\"\r\n                type=\"number\"\r\n                placeholder=\"duration\"\r\n                onChange={this.durationAddHandler}\r\n                value={this.state.duration}\r\n              />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm}>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addTaskHandler: (name, duration) =>\r\n//       dispatch({ type: actionTypes.ADD_TASK, name: name, duration: duration }),\r\n//     deleteTaskHandler: (id) =>\r\n//       dispatch({ type: actionTypes.DELETE_TASK, taskId: id }),\r\n//     editTaskHandler: (id, name, duration) =>\r\n//       dispatch({\r\n//         type: actionTypes.EDIT_TASK,\r\n//         name: name,\r\n//         taskId: id,\r\n//         duration: duration,\r\n//       }),\r\n//   };\r\n// };\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTaskHandler: (name, duration) =>\r\n      dispatch(actionCreators.addTask(name, duration)),\r\n    deleteTaskHandler: (id) => dispatch(actionCreators.deleteTask(id)),\r\n    editTaskHandler: (id, name, duration) =>\r\n      dispatch(actionCreators.editTask(id, name, duration)),\r\n    // editTaskHandler: (id, name, duration) =>\r\n    //   dispatch({\r\n    //     type: actionTypes.EDIT_TASK,\r\n    //     name: name,\r\n    //     taskId: id,\r\n    //     duration: duration,\r\n    //   }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskTable);\r\n","import React from \"react\";\r\n\r\nconst liveTimerLayout = (props) => {\r\n  const colors = [\r\n    \"#E74C3C\",\r\n    \"#884EA0\",\r\n    \"#E67E22\",\r\n    \"#17A589\",\r\n    \"#2E86C1\",\r\n    \"#CB4335\",\r\n    \"#616A6B\",\r\n    \"#A3E4D7\",\r\n    \"#A569BD\",\r\n    \"#EC7063\",\r\n    \"#145A32\",\r\n  ];\r\n  let sum = 0;\r\n  const taskDuration = [...props.tasks];\r\n  const sortedTask = taskDuration.sort((a, b) => a.duration - b.duration);\r\n  const modifiedTask = sortedTask.map((task) => {\r\n    sum += +task.duration;\r\n    if (sum <= 60) return task;\r\n  });\r\n  const updatedTask = modifiedTask.map((task, index) => {\r\n    if (task !== undefined) {\r\n      return (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            height: `${+task.duration * 10}px`,\r\n            background: `${colors[index % 11]}`,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {`${task.name}`}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div\r\n            className=\"card\"\r\n            style={{\r\n              position: \"relative\",\r\n              height: \"600px\",\r\n              border: \"2px solid gray\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: `${props.ctr * 10}px`,\r\n                right: \"0\",\r\n                width: \"100%\",\r\n                height: \"2px\",\r\n                border: \"3px solid #73AD21\",\r\n                textAlign: \"right\",\r\n              }}\r\n            >\r\n              Curernt Position\r\n            </div>\r\n\r\n            {updatedTask}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">0 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">10 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">20 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">30 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">40 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">50 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">60 second</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default liveTimerLayout;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport LiveTimerLayout from \"../../components/LiveTimerLayout/LiveTimerLayout\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/actions\";\r\nimport { Toast } from \"react-bootstrap\";\r\n\r\nclass LiveTimer extends Component {\r\n  state = {\r\n    counterState: this.props.ctr,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    let sum = 0;\r\n    const taskDuration = [...this.props.tasks];\r\n    const sortedTask = taskDuration.sort((a, b) => a.duration - b.duration);\r\n    const modifiedTask = sortedTask.map((task) => {\r\n      sum += +task.duration;\r\n      if (sum <= 60) return task;\r\n    });\r\n    const updatedTask = modifiedTask.filter((task) => task !== undefined);\r\n    let alertTime = 0;\r\n    if (this.props.valid) {\r\n      updatedTask.forEach((task) => {\r\n        if (\r\n          this.props.ctr === alertTime &&\r\n          this.state.counterState !== this.props.ctr\r\n        ) {\r\n          this.setState({ counterState: this.props.ctr });\r\n          this.props.notificationHandler(new Date(), task.name, alertTime);\r\n        }\r\n        alertTime += Math.floor(task.duration);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.notifications);\r\n    let alert = <p style={{ textAlign: \"center\" }}>Start the timer</p>;\r\n    if (this.props.valid) {\r\n      alert = this.props.notifications.map((task, index) => {\r\n        return (\r\n          <Toast\r\n            key={index}\r\n            show={true}\r\n            onClose={() => this.props.closeNotificationHandler(task.id)}\r\n            className=\"mb-2\"\r\n          >\r\n            <Toast.Header>\r\n              <i className=\"fas fa-bell\" />\r\n              &nbsp;\r\n              <strong className=\"mr-auto\">{task.name} has Started</strong>\r\n            </Toast.Header>\r\n          </Toast>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <div className=\"float-left\">\r\n          <h4>Live Timer</h4>\r\n        </div>\r\n        <div className=\"float-left ml-5 mb-2\">\r\n          <button\r\n            disabled={this.props.play}\r\n            onClick={() => this.props.playTimerHandler(this.props.ctr)}\r\n            className=\"btn btn-outline-primary mr-2\"\r\n          >\r\n            <i className=\"fas fa-play-circle\" />\r\n            &nbsp;start\r\n          </button>\r\n          <button\r\n            disabled={this.props.pause}\r\n            onClick={this.props.pauseTimerHandler}\r\n            className=\"btn btn-outline-secondary mr-2\"\r\n          >\r\n            <i className=\"fas fa-pause-circle\" />\r\n            &nbsp;pause\r\n          </button>\r\n          <button\r\n            onClick={this.props.resetTimerHandler}\r\n            className=\"btn btn-outline-secondary\"\r\n          >\r\n            <i className=\"fas fa-redo\" />\r\n            &nbsp;reset\r\n          </button>\r\n          <div className=\"float-right ml-3\">\r\n            <p style={{ textAlign: \"center\" }}>\r\n              {this.props.play\r\n                ? \"Your timer is running\"\r\n                : this.props.ctr === -1\r\n                ? \"Your timer is ready\"\r\n                : \"Your timer is pasued\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <LiveTimerLayout tasks={this.props.tasks} ctr={this.props.ctr} />\r\n        </div>\r\n        <div\r\n          className=\"container\"\r\n          aria-live=\"polite\"\r\n          aria-atomic=\"true\"\r\n          style={{\r\n            position: \"relative\",\r\n            minHeight: \"200px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: \"150px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <div className=\"container pb-2 mb-5\">{alert}</div>\r\n          </div>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n    ctr: state.counter,\r\n    play: state.play,\r\n    pause: state.pause,\r\n    valid: state.valid,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    playTimerHandler: (counter) => dispatch(actionCreators.playTimer(counter)),\r\n    pauseTimerHandler: () => dispatch(actionCreators.pauseTimer()),\r\n    resetTimerHandler: () => dispatch(actionCreators.resetTimer()),\r\n    notificationHandler: (id, name, duration) =>\r\n      dispatch(actionCreators.pushNofication(id, name, duration)),\r\n    closeNotificationHandler: (id) =>\r\n      dispatch(actionCreators.closeNofication(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LiveTimer);\r\n","import React, { Component } from \"react\";\r\nimport TaskTable from \"../Task-Table/TaskTable\";\r\nimport LiveTimer from \"../Live-Timer/LiveTimer\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h1 className=\"display-4\">\r\n          <strong>Automated Task Organizer</strong>\r\n        </h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5\">\r\n            <LiveTimer />\r\n          </div>\r\n\r\n          {/* task table */}\r\n          <div className=\"col-md-6 mt-5\">\r\n            <TaskTable />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport Main from \"../src/container/Main/Main\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/task-organizer\" exact component={Main} />\r\n            <Route path=\"/\" component={Main} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../store/actions/actions\";\r\n\r\nconst initialState = {\r\n  tasks: [\r\n    { id: 1, name: \"task 1\", duration: 15 },\r\n    { id: 2, name: \"task 2\", duration: 2.5 },\r\n    { id: 3, name: \"task 3\", duration: 25 },\r\n    { id: 4, name: \"task 4\", duration: 40 },\r\n    { id: 5, name: \"task 5\", duration: 10 },\r\n    { id: 6, name: \"task 6\", duration: 15 },\r\n    { id: 7, name: \"task 7\", duration: 20 },\r\n  ],\r\n  counter: -1,\r\n  play: false,\r\n  pause: true,\r\n  valid: false,\r\n  notifications: [],\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.ADD_TASK) {\r\n    if (action.name && action.duration) {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.concat({\r\n          id: new Date(),\r\n          name: action.name,\r\n          duration: action.duration,\r\n        }),\r\n      };\r\n    }\r\n  }\r\n  if (action.type === actionTypes.DELETE_TASK) {\r\n    const updatedTasks = state.tasks.filter(\r\n      (task, index) => task.id + index !== action.taskId\r\n    );\r\n    return {\r\n      ...state,\r\n      tasks: updatedTasks,\r\n    };\r\n  }\r\n  if (action.type === actionTypes.EDIT_TASK) {\r\n    const updatedTasks = state.tasks.filter(\r\n      (task) => task.id !== action.taskId\r\n    );\r\n    if (action.name && action.duration) {\r\n      return {\r\n        ...state,\r\n        tasks: updatedTasks.concat({\r\n          id: new Date(),\r\n          name: action.name,\r\n          duration: action.duration,\r\n        }),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (action.type === actionTypes.PLAY_TIMER) {\r\n    return {\r\n      ...state,\r\n      counter: state.counter + 1,\r\n      play: true,\r\n      pause: false,\r\n      valid: true,\r\n    };\r\n  }\r\n  if (action.type === actionTypes.PAUSE_TIMER) {\r\n    return {\r\n      ...state,\r\n      play: false,\r\n      pause: true,\r\n      valid: true,\r\n    };\r\n  }\r\n  if (action.type === actionTypes.RESET_TIMER) {\r\n    return {\r\n      ...state,\r\n      counter: -1,\r\n      play: false,\r\n      pause: true,\r\n      valid: false,\r\n      notifications: [],\r\n    };\r\n  }\r\n  if (action.type === actionTypes.PUSH_NOTIFICATION) {\r\n    return {\r\n      ...state,\r\n      notifications: state.notifications.concat({\r\n        id: action.id,\r\n        name: action.name,\r\n        duration: action.duration,\r\n      }),\r\n    };\r\n  }\r\n  if (action.type === actionTypes.CLOSE_NOTIFICATION) {\r\n    const updatedNotification = state.notifications.filter((task) => {\r\n      if (task.id !== action.notificationId) return task;\r\n    });\r\n    return {\r\n      ...state,\r\n      notifications: updatedNotification,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport reducer from \"../src/store/reducer\";\r\n\r\nconst logger = (store) => {\r\n  return (next) => {\r\n    return (action) => {\r\n      console.log(\"[Middleware] dispatching\", action);\r\n      const result = next(action);\r\n      console.log(\"[Middleware] next state\", store.getState());\r\n      return result;\r\n    };\r\n  };\r\n};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(logger, thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}