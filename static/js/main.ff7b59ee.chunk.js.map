{"version":3,"sources":["store/actions/actions.js","hoc/Auxiliary/Auxiliary.js","container/Task-Table/TaskTable.js","components/LiveTimerLayout/LiveTimerLayout.js","container/Live-Timer/LiveTimer.js","container/Main/Main.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["timer","aux","props","children","TaskTable","state","tasks","id","Date","name","duration","editId","show","nameAddHandler","event","setState","target","value","durationAddHandler","taskChangeHandler","handleClose","handleConfirm","editTaskHandler","className","this","map","task","index","key","Button","vibrant","onClick","deleteTaskHandler","type","placeholder","onChange","min","addTaskHandler","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","Component","connect","dispatch","setTimeout","newTask","actionCreators","taskId","liveTimerLayout","color","sum","taskDuraion","updatedTask","sort","a","b","style","height","background","position","border","top","ctr","right","width","LiveTimer","disabled","play","playTimerHandler","pause","pauseTimerHandler","resetTimerHandler","LiveTimerLayout","counter","cnt","clearInterval","setInterval","Main","App","path","exact","component","Boolean","window","location","hostname","match","initialState","reducer","action","concat","updatedTasks","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","console","log","result","getState","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iUAwCIA,EAAQ,KCtCGC,EAFH,SAACC,GAAD,OAAWA,EAAMC,UCQvBC,E,4MACJC,MAAQ,CACNC,MAAO,CACLC,GAAI,IAAIC,KACRC,KAAM,GACNC,SAAU,IAEZC,OAAQ,GACRC,MAAM,G,EAERC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEN,KAAMK,EAAME,OAAOC,S,EAErCC,mBAAqB,SAACJ,GACpB,EAAKC,SAAS,CAAEL,SAAUI,EAAME,OAAOC,S,EAEzCE,kBAAoB,SAACZ,EAAIE,GACvB,EAAKM,SAAS,CAAEH,MAAM,EAAMD,OAAQJ,K,EAEtCa,YAAc,WACZ,EAAKL,SAAS,CAAEH,MAAM,K,EAExBS,cAAgB,WACd,EAAKN,SAAS,CAAEH,MAAM,IACtB,EAAKV,MAAMoB,gBACT,EAAKjB,MAAMM,OACX,EAAKN,MAAMI,KACX,EAAKJ,MAAMK,W,uDAGL,IAAD,OACHJ,EAAQ,uBAAGiB,UAAU,eAAb,mBA4BZ,OA3BIC,KAAKtB,MAAMI,QACbA,EAAQkB,KAAKtB,MAAMI,MAAMmB,KAAI,SAACC,EAAMC,GAClC,OACE,2BAAOC,IAAKF,EAAKnB,GAAKoB,GACpB,wBAAIJ,UAAU,gBACZ,4BAAKG,EAAKjB,MACV,4BAAKiB,EAAKhB,SAAV,WACA,4BACE,kBAACmB,EAAA,EAAD,CACEC,QAAQ,kBACRC,QAAS,kBAAM,EAAKZ,kBAAkBO,EAAKnB,MAF7C,QAMA,4BACEgB,UAAU,+BACVQ,QAAS,kBAAM,EAAK7B,MAAM8B,kBAAkBN,EAAKnB,GAAKoB,KAFxD,iBAcV,kBAAC,EAAD,KACE,yBAAKJ,UAAU,cACb,2CAEF,2BACEU,KAAK,OACLC,YAAY,OACZC,SAAUX,KAAKX,eACfI,MAAOO,KAAKnB,MAAMI,OAEpB,2BACEwB,KAAK,SACLG,IAAI,IACJF,YAAY,WACZC,SAAUX,KAAKN,mBACfD,MAAOO,KAAKnB,MAAMK,WAEpB,yBAAKa,UAAU,eACb,4BACEA,UAAU,yBACVQ,QAAS,kBACP,EAAK7B,MAAMmC,eAAe,EAAKhC,MAAMI,KAAM,EAAKJ,MAAMK,YAH1D,aASF,yBAAKa,UAAU,oBACb,2BAAOA,UAAU,2DACf,2BAAOA,UAAU,cACf,4BACE,yCACA,6CACA,yCAIHjB,GAEH,kBAACgC,EAAA,EAAD,CAAO1B,KAAMY,KAAKnB,MAAMO,KAAM2B,OAAQf,KAAKJ,aACzC,kBAACkB,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,uBAEF,kBAACJ,EAAA,EAAMK,KAAP,KACE,2BACEV,KAAK,OACLC,YAAY,OACZC,SAAUX,KAAKX,eACfI,MAAOO,KAAKnB,MAAMI,OAEpB,2BACE2B,IAAI,IACJH,KAAK,SACLC,YAAY,WACZC,SAAUX,KAAKN,mBACfD,MAAOO,KAAKnB,MAAMK,YAGtB,kBAAC4B,EAAA,EAAMM,OAAP,KACE,kBAACf,EAAA,EAAD,CAAQgB,QAAQ,YAAYd,QAASP,KAAKJ,aAA1C,SAGA,kBAACS,EAAA,EAAD,CAAQgB,QAAQ,UAAUd,QAASP,KAAKH,eAAxC,wB,GA1HUyB,aA+KTC,eA1CS,SAAC1C,GACvB,MAAO,CACLC,MAAOD,EAAMC,UAmBU,SAAC0C,GAC1B,MAAO,CACLX,eAAgB,SAAC5B,EAAMC,GAAP,OACdsC,EFzIiB,SAACvC,EAAMC,GAC5B,OAAO,SAACsC,GACNC,YAAW,WACTD,EAXiB,SAACvC,EAAMC,GAC5B,MAAO,CACLuB,KAtBoB,WAuBpBxB,KAAMA,EACNC,SAAUA,GAOCwC,CAAQzC,EAAMC,MACtB,IEqIQyC,CAAuB1C,EAAMC,KACxCsB,kBAAmB,SAACzB,GAAD,OAAQyC,EFlKL,SAACzC,GACzB,MAAO,CACL0B,KALuB,cAMvBmB,OAAQ7C,GE+J4B4C,CAA0B5C,KAC9De,gBAAiB,SAACf,EAAIE,EAAMC,GAAX,OACfsC,EF7JkB,SAACzC,EAAIE,EAAMC,GACjC,MAAO,CACLuB,KAXqB,YAYrBxB,KAAMA,EACNC,SAAUA,EACV0C,OAAQ7C,GEwJG4C,CAAwB5C,EAAIE,EAAMC,QAelCqC,CAA6C3C,GChC7CiD,EArJS,SAACnD,GACvB,IAAMoD,EAAQ,CACZ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEEC,EAAM,EACJC,EAActD,EAAMI,MAAMmB,KAAI,SAACC,GAEnC,IADA6B,IAAQ7B,EAAKhB,WACF,GAAI,OAAOgB,EAAKhB,YAMvB+C,GAJWvD,EAAMI,MAAMmB,KAAI,SAACC,GAEhC,IADA6B,IAAQ7B,EAAKhB,WACF,GAAI,OAAOgB,EAAKjB,QAET+C,EACjBE,MAAK,SAAUC,EAAGC,GACjB,OAAOD,EAAIC,KAEZnC,KAAI,SAACC,EAAMC,GACV,OACE,yBACEC,IAAKD,EACLkC,MAAO,CACLC,OAAO,GAAD,OAAa,IAAPpC,EAAN,MACNqC,WAAW,GAAD,OAAKT,EAAM3B,EAAQ,YAOvC,OACE,yBAAKJ,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBACEA,UAAU,OACVsC,MAAO,CACLG,SAAU,WACVF,OAAQ,QACRG,OAAQ,mBAGV,yBACEJ,MAAO,CACLG,SAAU,WACVE,IAAI,GAAD,OAAiB,GAAZhE,EAAMiE,IAAX,MACHC,MAAO,IACPC,MAAO,OACPP,OAAQ,MACRG,OAAQ,sBAPZ,oBAaCR,IAGL,yBAAKlC,UAAU,YACb,yBAAKA,UAAU,MAAMsC,MAAO,CAAEC,OAAQ,UACpC,yBAAKvC,UAAU,aAAf,aAEF,yBAAKA,UAAU,MAAMsC,MAAO,CAAEC,OAAQ,UACpC,yBAAKvC,UAAU,aAAf,cAEF,yBAAKA,UAAU,MAAMsC,MAAO,CAAEC,OAAQ,UACpC,yBAAKvC,UAAU,aAAf,cAEF,yBAAKA,UAAU,MAAMsC,MAAO,CAAEC,OAAQ,UACpC,yBAAKvC,UAAU,aAAf,cAEF,yBAAKA,UAAU,MAAMsC,MAAO,CAAEC,OAAQ,UACpC,yBAAKvC,UAAU,aAAf,cAEF,yBAAKA,UAAU,MAAMsC,MAAO,CAAEC,OAAQ,UACpC,yBAAKvC,UAAU,aAAf,cAEF,yBAAKA,UAAU,MAAMsC,MAAO,CAAEC,OAAQ,UACpC,yBAAKvC,UAAU,aAAf,kBCpFN+C,E,uKACM,IAAD,OAMP,OACE,kBAAC,EAAD,KACE,yBAAK/C,UAAU,cACb,2CAEF,yBAAKA,UAAU,mBACb,4BACEgD,SAAU/C,KAAKtB,MAAMsE,KACrBzC,QAAS,kBAAM,EAAK7B,MAAMuE,iBAAiB,EAAKvE,MAAMiE,MACtD5C,UAAU,gCAEV,uBAAGA,UAAU,uBALf,aAQA,4BACEgD,SAAU/C,KAAKtB,MAAMwE,MACrB3C,QAASP,KAAKtB,MAAMyE,kBACpBpD,UAAU,kCAEV,uBAAGA,UAAU,wBALf,aAQA,4BACEQ,QAASP,KAAKtB,MAAM0E,kBACpBrD,UAAU,6BAEV,uBAAGA,UAAU,gBAJf,cASF,yBAAKA,UAAU,QACb,kBAACsD,EAAD,CAAiBvE,MAAOkB,KAAKtB,MAAMI,MAAO6D,IAAK3C,KAAKtB,MAAMiE,Y,GAvC5CrB,aA+DTC,eAjBS,SAAC1C,GACvB,MAAO,CACLC,MAAOD,EAAMC,MACb6D,IAAK9D,EAAMyE,QACXN,KAAMnE,EAAMmE,KACZE,MAAOrE,EAAMqE,UAIU,SAAC1B,GAC1B,MAAO,CACLyB,iBAAkB,SAACK,GAAD,OAAa9B,GJrB1B,SAACA,GACN,IAAI+B,EAAM,EACVC,cAAchF,GACdA,EAAQiF,aAAY,WAClBjC,EAAS,CAAEf,KAVS,eAYR,OADZ8C,GACgBC,cAAchF,KAC7B,SIeH2E,kBAAmB,kBAAM3B,GJVpB,SAACA,GACNC,YAAW,WACT+B,cAAchF,GACdgD,EAAS,CAAEf,KApBU,kBAqBpB,OIOH2C,kBAAmB,kBAAM5B,GJHpB,SAACA,GACNC,YAAW,WACT+B,cAAchF,GACdgD,EAAS,CAAEf,KA3BU,kBA4BpB,UIGQc,CAA6CuB,GC3C7CY,E,uKApBX,OACE,yBAAK3D,UAAU,mBACb,wBAAIA,UAAU,aACZ,6DAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,OAIF,yBAAKA,UAAU,iBACb,kBAAC,EAAD,a,GAdOuB,a,6BCeJqC,E,uKAXX,OACE,kBAAC,IAAD,KACE,yBAAK5D,UAAU,OACb,kBAAC,IAAD,CAAO6D,KAAK,kBAAkBC,OAAK,EAACC,UAAWJ,IAC/C,kBAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAACC,UAAWJ,U,GANzBpC,aCMEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WChBAC,EAAe,CAEnBtF,MAAO,GACPwE,QAAS,EACTN,MAAM,EACNE,OAAO,GAiEMmB,EA/DC,WAAmC,IAAlCxF,EAAiC,uDAAzBuF,EAAcE,EAAW,uCAChD,GRVsB,aQUlBA,EAAO7D,MACL6D,EAAOrF,MAAQqF,EAAOpF,SACxB,OAAO,2BACFL,GADL,IAEEC,MAAOD,EAAMC,MAAMyF,OAAO,CACxBxF,GAAI,IAAIC,KACRC,KAAMqF,EAAOrF,KACbC,SAAUoF,EAAOpF,aAKzB,GRrByB,gBQqBrBoF,EAAO7D,KAAkC,CAC3C,IAAM+D,EAAe3F,EAAMC,MAAM2F,QAC/B,SAACvE,EAAMC,GAAP,OAAiBD,EAAKnB,GAAKoB,IAAUmE,EAAO1C,UAE9C,OAAO,2BACF/C,GADL,IAEEC,MAAO0F,IAGX,GR7BuB,cQ6BnBF,EAAO7D,KAAgC,CACzC,IAAM+D,EAAe3F,EAAMC,MAAM2F,QAC/B,SAACvE,GAAD,OAAUA,EAAKnB,KAAOuF,EAAO1C,UAE/B,OAAO,2BACF/C,GADL,IAEEC,MAAO0F,EAAaD,OAAO,CACzBxF,GAAI,IAAIC,KACRC,KAAMqF,EAAOrF,KACbC,SAAUoF,EAAOpF,aAKvB,MRTwB,eQSpBoF,EAAO7D,KACF,2BACF5B,GADL,IAEEyE,QAASzE,EAAMyE,QAAU,EACzBN,MAAM,EACNE,OAAO,IRbc,gBQgBrBoB,EAAO7D,KACF,2BACF5B,GADL,IAEEmE,MAAM,EACNE,OAAO,IRnBc,gBQsBrBoB,EAAO7D,KACF,2BACF5B,GADL,IAEEyE,QAAS,EACTN,MAAM,EACNE,OAAO,IAIJrE,GChDH6F,EAAmBV,OAAOW,sCAAwCC,IAClEC,EAAQC,YACZT,EACAK,EAAiBK,aAbJ,SAACF,GACd,OAAO,SAACG,GACN,OAAO,SAACV,GACNW,QAAQC,IAAI,2BAA4BZ,GACxC,IAAMa,EAASH,EAAKV,GAEpB,OADAW,QAAQC,IAAI,0BAA2BL,EAAMO,YACtCD,MAO8BE,OAG3CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAAC,EAAD,QAGJY,SAASC,eAAe,SFkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjB,QAAQiB,MAAMA,EAAMC,c","file":"static/js/main.ff7b59ee.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    taskId: id,\r\n  };\r\n};\r\n\r\nexport const editTask = (id, name, duration) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    name: name,\r\n    duration: duration,\r\n    taskId: id,\r\n  };\r\n};\r\n\r\nexport const newTask = (name, duration) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    name: name,\r\n    duration: duration,\r\n  };\r\n};\r\n\r\nexport const addTask = (name, duration) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(newTask(name, duration));\r\n    }, 0);\r\n  };\r\n};\r\n\r\nexport const PLAY_TIMER = \"PLAY_TIMER\";\r\nexport const PAUSE_TIMER = \"PAUSE_TIMER\";\r\nexport const RESET_TIMER = \"RESET_TIMER\";\r\n\r\nlet timer = null;\r\nexport const playTimer = () => {\r\n  return (dispatch) => {\r\n    let cnt = 0;\r\n    clearInterval(timer);\r\n    timer = setInterval(() => {\r\n      dispatch({ type: PLAY_TIMER });\r\n      cnt++;\r\n      if (cnt === 60) clearInterval(timer);\r\n    }, 1000);\r\n  };\r\n};\r\n\r\nexport const pauseTimer = () => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      dispatch({ type: PAUSE_TIMER });\r\n    }, 0);\r\n  };\r\n};\r\nexport const resetTimer = () => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      dispatch({ type: RESET_TIMER });\r\n    }, 0);\r\n  };\r\n};\r\n","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport * as actionCreators from \"../../store/actions/actions\";\r\n// import * as actionTypes from \"../../store/actions/actions\";\r\n// import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\n\r\nclass TaskTable extends Component {\r\n  state = {\r\n    tasks: {\r\n      id: new Date(),\r\n      name: \"\",\r\n      duration: \"\",\r\n    },\r\n    editId: \"\",\r\n    show: false,\r\n  };\r\n  nameAddHandler = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  durationAddHandler = (event) => {\r\n    this.setState({ duration: event.target.value });\r\n  };\r\n  taskChangeHandler = (id, name) => {\r\n    this.setState({ show: true, editId: id });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  handleConfirm = () => {\r\n    this.setState({ show: false });\r\n    this.props.editTaskHandler(\r\n      this.state.editId,\r\n      this.state.name,\r\n      this.state.duration\r\n    );\r\n  };\r\n  render() {\r\n    let tasks = <p className=\"text-center\">Please add task</p>;\r\n    if (this.props.tasks) {\r\n      tasks = this.props.tasks.map((task, index) => {\r\n        return (\r\n          <tbody key={task.id + index}>\r\n            <tr className=\"text-success\">\r\n              <td>{task.name}</td>\r\n              <td>{task.duration} second</td>\r\n              <td>\r\n                <Button\r\n                  vibrant=\"outline-primary\"\r\n                  onClick={() => this.taskChangeHandler(task.id)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <button\r\n                  className=\"btn btn-outline-primary ml-2\"\r\n                  onClick={() => this.props.deleteTaskHandler(task.id + index)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <div className=\"float-left\">\r\n          <h4>Task Table</h4>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          onChange={this.nameAddHandler}\r\n          value={this.state.name}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          placeholder=\"Duration\"\r\n          onChange={this.durationAddHandler}\r\n          value={this.state.duration}\r\n        />\r\n        <div className=\"float-right\">\r\n          <button\r\n            className=\"btn btn-secondary mb-3\"\r\n            onClick={() =>\r\n              this.props.addTaskHandler(this.state.name, this.state.duration)\r\n            }\r\n          >\r\n            Add Task\r\n          </button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-hover table-bordered table-md\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>Task Name</th>\r\n                <th>Task Duration</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {tasks}\r\n          </table>\r\n          <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Modal heading</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                onChange={this.nameAddHandler}\r\n                value={this.state.name}\r\n              />\r\n              <input\r\n                min=\"1\"\r\n                type=\"number\"\r\n                placeholder=\"duration\"\r\n                onChange={this.durationAddHandler}\r\n                value={this.state.duration}\r\n              />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm}>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addTaskHandler: (name, duration) =>\r\n//       dispatch({ type: actionTypes.ADD_TASK, name: name, duration: duration }),\r\n//     deleteTaskHandler: (id) =>\r\n//       dispatch({ type: actionTypes.DELETE_TASK, taskId: id }),\r\n//     editTaskHandler: (id, name, duration) =>\r\n//       dispatch({\r\n//         type: actionTypes.EDIT_TASK,\r\n//         name: name,\r\n//         taskId: id,\r\n//         duration: duration,\r\n//       }),\r\n//   };\r\n// };\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTaskHandler: (name, duration) =>\r\n      dispatch(actionCreators.addTask(name, duration)),\r\n    deleteTaskHandler: (id) => dispatch(actionCreators.deleteTask(id)),\r\n    editTaskHandler: (id, name, duration) =>\r\n      dispatch(actionCreators.editTask(id, name, duration)),\r\n    // editTaskHandler: (id, name, duration) =>\r\n    //   dispatch({\r\n    //     type: actionTypes.EDIT_TASK,\r\n    //     name: name,\r\n    //     taskId: id,\r\n    //     duration: duration,\r\n    //   }),\r\n  };\r\n};\r\n\r\n// TaskTable.propTypes = {\r\n//   value: PropTypes.number.isRequired,\r\n// };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskTable);\r\n","import React from \"react\";\r\n\r\nconst liveTimerLayout = (props) => {\r\n  const color = [\r\n    \"#E74C3C\",\r\n    \"#884EA0\",\r\n    \"#E67E22\",\r\n    \"#17A589\",\r\n    \"#2E86C1\",\r\n    \"#CB4335\",\r\n    \"#616A6B\",\r\n    \"#A3E4D7\",\r\n    \"#A569BD\",\r\n    \"#EC7063\",\r\n    \"#145A32\",\r\n  ];\r\n  let sum = 0;\r\n  const taskDuraion = props.tasks.map((task) => {\r\n    sum += +task.duration;\r\n    if (sum <= 60) return task.duration;\r\n  });\r\n  const taskName = props.tasks.map((task) => {\r\n    sum += +task.duration;\r\n    if (sum <= 60) return task.name;\r\n  });\r\n  const updatedTask = taskDuraion\r\n    .sort(function (a, b) {\r\n      return a - b;\r\n    })\r\n    .map((task, index) => {\r\n      return (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            height: `${+task * 10}px`,\r\n            background: `${color[index % 11]}`,\r\n          }}\r\n        >\r\n          {/* {`${task} seconds`} */}\r\n        </div>\r\n      );\r\n    });\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div\r\n            className=\"card\"\r\n            style={{\r\n              position: \"relative\",\r\n              height: \"600px\",\r\n              border: \"2px solid gray\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: `${props.ctr * 10}px`,\r\n                right: \"0\",\r\n                width: \"100%\",\r\n                height: \"2px\",\r\n                border: \"3px solid #73AD21\",\r\n              }}\r\n            >\r\n              Curernt Position\r\n            </div>\r\n\r\n            {updatedTask}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">0 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">10 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">20 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">30 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">40 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">50 second</div>\r\n          </div>\r\n          <div className=\"row\" style={{ height: \"100px\" }}>\r\n            <div className=\"col-md-12\">60 second</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\" style={{ height: \"100px\" }}></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">0 Second</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\" style={{ height: \"100px\" }}></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">10 Second</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\" style={{ height: \"100px\" }}></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">20 Second</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\" style={{ height: \"100px\" }}></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">30 Second</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\" style={{ height: \"100px\" }}></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">40 Second</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\" style={{ height: \"100px\" }}>\r\n              <p className=\"card-text\">\r\n                With supporting text below as a natural lead-in to additional\r\n                content.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\">50 Second</div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default liveTimerLayout;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport LiveTimerLayout from \"../../components/LiveTimerLayout/LiveTimerLayout\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/actions\";\r\n\r\nclass LiveTimer extends Component {\r\n  render() {\r\n    // const taskDurationArray = Object.keys(this.props.tasks).map((task) => {\r\n    //   return task;\r\n    // });\r\n\r\n    // const pauseTimerHandler = () => clearInterval(this.props.playTimerHandler);\r\n    return (\r\n      <Aux>\r\n        <div className=\"float-left\">\r\n          <h4>Live Timer</h4>\r\n        </div>\r\n        <div className=\"float-left ml-5\">\r\n          <button\r\n            disabled={this.props.play}\r\n            onClick={() => this.props.playTimerHandler(this.props.ctr)}\r\n            className=\"btn btn-outline-primary mr-2\"\r\n          >\r\n            <i className=\"fas fa-play-circle\" />\r\n            &nbsp;start\r\n          </button>\r\n          <button\r\n            disabled={this.props.pause}\r\n            onClick={this.props.pauseTimerHandler}\r\n            className=\"btn btn-outline-secondary mr-2\"\r\n          >\r\n            <i className=\"fas fa-pause-circle\" />\r\n            &nbsp;pause\r\n          </button>\r\n          <button\r\n            onClick={this.props.resetTimerHandler}\r\n            className=\"btn btn-outline-secondary\"\r\n          >\r\n            <i className=\"fas fa-redo\" />\r\n            &nbsp;reset\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"mt-5\">\r\n          <LiveTimerLayout tasks={this.props.tasks} ctr={this.props.ctr} />\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n    ctr: state.counter,\r\n    play: state.play,\r\n    pause: state.pause,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    playTimerHandler: (counter) => dispatch(actionCreators.playTimer(counter)),\r\n    pauseTimerHandler: () => dispatch(actionCreators.pauseTimer()),\r\n    resetTimerHandler: () => dispatch(actionCreators.resetTimer()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LiveTimer);\r\n","import React, { Component } from \"react\";\r\nimport TaskTable from \"../Task-Table/TaskTable\";\r\nimport LiveTimer from \"../Live-Timer/LiveTimer\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h1 className=\"display-4\">\r\n          <strong>Automated Task Organizer</strong>\r\n        </h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5\">\r\n            <LiveTimer />\r\n          </div>\r\n\r\n          {/* task table */}\r\n          <div className=\"col-md-6 mt-5\">\r\n            <TaskTable />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport Main from \"../src/container/Main/Main\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route path=\"/task-organizer\" exact component={Main} />\n          <Route path=\"/\" exact component={Main} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../store/actions/actions\";\r\n\r\nconst initialState = {\r\n  // { id: 1, name: \"siam\", duration: \"15\" }\r\n  tasks: [],\r\n  counter: 0,\r\n  play: false,\r\n  pause: true,\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.ADD_TASK) {\r\n    if (action.name && action.duration) {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.concat({\r\n          id: new Date(),\r\n          name: action.name,\r\n          duration: action.duration,\r\n        }),\r\n      };\r\n    }\r\n  }\r\n  if (action.type === actionTypes.DELETE_TASK) {\r\n    const updatedTasks = state.tasks.filter(\r\n      (task, index) => task.id + index !== action.taskId\r\n    );\r\n    return {\r\n      ...state,\r\n      tasks: updatedTasks,\r\n    };\r\n  }\r\n  if (action.type === actionTypes.EDIT_TASK) {\r\n    const updatedTasks = state.tasks.filter(\r\n      (task) => task.id !== action.taskId\r\n    );\r\n    return {\r\n      ...state,\r\n      tasks: updatedTasks.concat({\r\n        id: new Date(),\r\n        name: action.name,\r\n        duration: action.duration,\r\n      }),\r\n    };\r\n  }\r\n\r\n  if (action.type === actionTypes.PLAY_TIMER) {\r\n    return {\r\n      ...state,\r\n      counter: state.counter + 1,\r\n      play: true,\r\n      pause: false,\r\n    };\r\n  }\r\n  if (action.type === actionTypes.PAUSE_TIMER) {\r\n    return {\r\n      ...state,\r\n      play: false,\r\n      pause: true,\r\n    };\r\n  }\r\n  if (action.type === actionTypes.RESET_TIMER) {\r\n    return {\r\n      ...state,\r\n      counter: 0,\r\n      play: false,\r\n      pause: true,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport reducer from \"../src/store/reducer\";\r\n\r\nconst logger = (store) => {\r\n  return (next) => {\r\n    return (action) => {\r\n      console.log(\"[Middleware] dispatching\", action);\r\n      const result = next(action);\r\n      console.log(\"[Middleware] next state\", store.getState());\r\n      return result;\r\n    };\r\n  };\r\n};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(logger, thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}